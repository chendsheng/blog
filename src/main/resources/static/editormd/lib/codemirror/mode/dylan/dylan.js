(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("dylan",function(e){var t={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};t["otherDefinition"]=t["unnamedDefinition"].concat(t["namedDefinition"]).concat(t["otherParameterizedDefinition"]);t["definition"]=t["typeParameterizedDefinition"].concat(t["otherDefinition"]);t["parameterizedDefinition"]=t["typeParameterizedDefinition"].concat(t["otherParameterizedDefinition"]);t["simpleDefinition"]=t["constantSimpleDefinition"].concat(t["variableSimpleDefinition"]).concat(t["otherSimpleDefinition"]);t["keyword"]=t["statement"].concat(t["separator"]).concat(t["other"]);var n="[-_a-zA-Z?!*@<>$%]+";var o=new RegExp("^"+n);var a={symbolKeyword:n+":",symbolClass:"<"+n+">",symbolGlobal:"\\*"+n+"\\*",symbolConstant:"\\$"+n};var l={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var i in a)if(a.hasOwnProperty(i))a[i]=new RegExp("^"+a[i]);a["keyword"]=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var r={};r["keyword"]="keyword";r["definition"]="def";r["simpleDefinition"]="def";r["signalingCalls"]="builtin";var f={};var s={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(n){t[n].forEach(function(e){f[e]=n;s[e]=r[n]})});function c(e,n,t){n.tokenize=t;return t(e,n)}var u,m;function d(e,n,t){u=e;m=t;return n}function b(n,e){var t=n.peek();if(t=="'"||t=='"'){n.next();return c(n,e,y(t,"string","string"))}else if(t=="/"){n.next();if(n.eat("*")){return c(n,e,p)}else if(n.eat("/")){n.skipToEnd();return d("comment","comment")}else{n.skipTo(" ");return d("operator","operator")}}else if(/\d/.test(t)){n.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return d("number","number")}else if(t=="#"){n.next();t=n.peek();if(t=='"'){n.next();return c(n,e,y('"',"symbol","string-2"))}else if(t=="b"){n.next();n.eatWhile(/[01]/);return d("number","number")}else if(t=="x"){n.next();n.eatWhile(/[\da-f]/i);return d("number","number")}else if(t=="o"){n.next();n.eatWhile(/[0-7]/);return d("number","number")}else{n.eatWhile(/[-a-zA-Z]/);return d("hash","keyword")}}else if(n.match("end")){return d("end","keyword")}for(var i in a){if(a.hasOwnProperty(i)){var r=a[i];if(r instanceof Array&&r.some(function(e){return n.match(e)})||n.match(r))return d(i,l[i],n.current())}}if(n.match("define")){return d("definition","def")}else{n.eatWhile(/[\w\-]/);if(f[n.current()]){return d(f[n.current()],s[n.current()],n.current())}else if(n.current().match(o)){return d("variable","variable")}else{n.next();return d("other","variable-2")}}}function p(e,n){var t=false,i;while(i=e.next()){if(i=="/"&&t){n.tokenize=b;break}t=i=="*"}return d("comment","comment")}function y(r,o,a){return function(e,n){var t,i=false;while((t=e.next())!=null){if(t==r){i=true;break}}if(i)n.tokenize=b;return d(o,a)}}return{startState:function(){return{tokenize:b,currentIndent:0}},token:function(e,n){if(e.eatSpace())return null;var t=n.tokenize(e,n);return t},blockCommentStart:"/*",blockCommentEnd:"*/"}});e.defineMIME("text/x-dylan","dylan")});
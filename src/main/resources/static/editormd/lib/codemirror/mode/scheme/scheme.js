(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("scheme",function(){var m="builtin",p="comment",h="string",g="atom",v="number",x="bracket";var b=2;function e(e){var t={},i=e.split(" ");for(var n=0;n<i.length;++n)t[i[n]]=true;return t}var k=e("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?");var y=e("define let letrec let* lambda");function n(e,t,i){this.indent=e;this.type=t;this.prev=i}function w(e,t,i){e.indentStack=new n(t,i,e.indentStack)}function E(e){e.indentStack=e.indentStack.prev}var t=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i);var i=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i);var r=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i);var a=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function q(e){return e.match(t)}function S(e){return e.match(i)}function C(e,t){if(t===true){e.backUp(1)}return e.match(a)}function $(e){return e.match(r)}return{startState:function(){return{indentStack:null,indentation:0,mode:false,sExprComment:false}},token:function(e,t){if(t.indentStack==null&&e.sol()){t.indentation=e.indentation()}if(e.eatSpace()){return null}var i=null;switch(t.mode){case"string":var n,r=false;while((n=e.next())!=null){if(n=='"'&&!r){t.mode=false;break}r=!r&&n=="\\"}i=h;break;case"comment":var n,a=false;while((n=e.next())!=null){if(n=="#"&&a){t.mode=false;break}a=n=="|"}i=p;break;case"s-expr-comment":t.mode=false;if(e.peek()=="("||e.peek()=="["){t.sExprComment=0}else{e.eatWhile(/[^/s]/);i=p;break}default:var l=e.next();if(l=='"'){t.mode="string";i=h}else if(l=="'"){i=g}else if(l=="#"){if(e.eat("|")){t.mode="comment";i=p}else if(e.eat(/[tf]/i)){i=g}else if(e.eat(";")){t.mode="s-expr-comment";i=p}else{var c=null,s=false,o=true;if(e.eat(/[ei]/i)){s=true}else{e.backUp(1)}if(e.match(/^#b/i)){c=q}else if(e.match(/^#o/i)){c=S}else if(e.match(/^#x/i)){c=$}else if(e.match(/^#d/i)){c=C}else if(e.match(/^[-+0-9.]/,false)){o=false;c=C}else if(!s){e.eat("#")}if(c!=null){if(o&&!s){e.match(/^#[ei]/i)}if(c(e))i=v}}}else if(/^[-+0-9.]/.test(l)&&C(e,true)){i=v}else if(l==";"){e.skipToEnd();i=p}else if(l=="("||l=="["){var d="";var f=e.column(),u;while((u=e.eat(/[^\s\(\[\;\)\]]/))!=null){d+=u}if(d.length>0&&y.propertyIsEnumerable(d)){w(t,f+b,l)}else{e.eatSpace();if(e.eol()||e.peek()==";"){w(t,f+1,l)}else{w(t,f+e.current().length,l)}}e.backUp(e.current().length-1);if(typeof t.sExprComment=="number")t.sExprComment++;i=x}else if(l==")"||l=="]"){i=x;if(t.indentStack!=null&&t.indentStack.type==(l==")"?"(":"[")){E(t);if(typeof t.sExprComment=="number"){if(--t.sExprComment==0){i=p;t.sExprComment=false}}}}else{e.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/);if(k&&k.propertyIsEnumerable(e.current())){i=m}else i="variable"}}return typeof t.sExprComment=="number"?p:i},indent:function(e){if(e.indentStack==null)return e.indentation;return e.indentStack.indent},lineComment:";;"}});e.defineMIME("text/x-scheme","scheme")});